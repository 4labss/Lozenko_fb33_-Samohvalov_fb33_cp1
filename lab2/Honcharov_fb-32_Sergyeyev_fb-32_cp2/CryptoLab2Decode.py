import collections
import matplotlib.pyplot as plt

RUSSIAN_ALPHABET = 'абвгдежзийклмнопрстуфхцчшщъыьэюя'
RUSSIAN_FREQUENCIES = {
    'о': 0.10983, 'е': 0.08483, 'а': 0.07998, 'и': 0.07367, 'н': 0.067,
    'т': 0.06318, 'с': 0.05473, 'р': 0.04746, 'в': 0.04533, 'л': 0.04343,
    'к': 0.03486, 'м': 0.03203, 'д': 0.02977, 'п': 0.02804, 'у': 0.02615,
    'я': 0.02001, 'ы': 0.01898, 'ь': 0.01735, 'г': 0.01687, 'з': 0.01641,
    'б': 0.01592, 'ч': 0.0145,  'й': 0.01208, 'х': 0.00966, 'ж': 0.0094,
    'ш': 0.00718, 'ю': 0.00639, 'ц': 0.00486, 'щ': 0.00361, 'э': 0.00331,
    'ф': 0.00267, 'ъ': 0.00037
}

def get_index_of_coincidence(text):
    n = len(text)
    if n < 2:
        return 0.0
    
    counts = collections.Counter(text)
    index = sum(count * (count - 1) for count in counts.values())
    return index / (n * (n - 1))

key_IC = {}

def find_key_length(ciphertext, min_len=2, max_len=32):
    best_len = 0
    max_avg_ic = 0.0

    for key_len in range(min_len, max_len + 1):
        total_ic = 0.0
        for i in range(key_len):
            sub_text = ciphertext[i::key_len]
            total_ic += get_index_of_coincidence(sub_text)
        
        avg_ic = total_ic / key_len
        key_IC[key_len] = avg_ic
        print(f"{key_len}: {avg_ic}")
        if avg_ic > max_avg_ic:
            max_avg_ic = avg_ic
            best_len = key_len
            
    return best_len

def find_key(ciphertext, key_length):
    key = ''
    for i in range(key_length):
        sub_text = ciphertext[i::key_length]
        best_shift = 0
        max_corr = 0.0
        
        for shift in range(len(RUSSIAN_ALPHABET)):
            shifted_text = ''
            for char in sub_text:
                shifted_index = (RUSSIAN_ALPHABET.find(char) - shift + len(RUSSIAN_ALPHABET)) % len(RUSSIAN_ALPHABET)
                shifted_text += RUSSIAN_ALPHABET[shifted_index]
            
            counts = collections.Counter(shifted_text)
            current_corr = sum(counts.get(char, 0) / len(shifted_text) * RUSSIAN_FREQUENCIES.get(char, 0) for char in RUSSIAN_ALPHABET)

            if current_corr > max_corr:
                max_corr = current_corr
                best_shift = shift
        
        key += RUSSIAN_ALPHABET[best_shift]
        
    return key

def decrypt_vigenere(ciphertext, key):
    plaintext = ''
    key_index = 0
    for char in ciphertext:
        key_char = key[key_index % len(key)]
        shift = RUSSIAN_ALPHABET.find(key_char)
        
        decrypted_index = (RUSSIAN_ALPHABET.find(char) - shift + len(RUSSIAN_ALPHABET)) % len(RUSSIAN_ALPHABET)
        plaintext += RUSSIAN_ALPHABET[decrypted_index]
        key_index += 1
        
    return plaintext

encrypted_text = """щоыкцрылжцьштхъогзцуэцъмщкубфющъуытфьбахсюьувчузюмопощквкъмьчтмусуьшюхуцтрцоэитсуряхяьъыежърцяросыотюрщмчщсфьйоыоюыуъоэиътшйдхъьъхефярцйыхявэцьщзхщцыфущкборяэййшдцчмцубжцюхшмяилхэвгшсоьлмтшцытъиоуянюбкрширчюгмчфщцшбвъинзьтьтэчшлцциучеутьхаюятужифкчтщььэщявтчлшообцуафъцгепхщумямщмьйэужйэнмдъптрчрмърйюхьпцйыхрувлейжннчщйувфющмапыэчпьлыюыыцнцйрмйщьтьфььюльйякофахъбъьцьшрэиудыхлвэцюпнжхмьдщгыроюцлпъхзмйямюгьоаыуцхккящхфряшяцнъышйхшчобьуьщцаьцфебшахщоьупдьнфашпэюбоэшкстэлдазувацьжцонпйпнтцжэсцькфнщчжямъяэпсохтпнфтьщрхбыцъхдпрфаывчвкрмьэмцфйзазшяэщдвнпыщехщъершыяшуцикдхжпчяэецчшжищбмгуоуэрглпктхйлййообъсоерхкцйшзахтьбуоуыъчрбюаюяошшнънкъмщмъххтдшнрххйхахщмщьюрмснясцуткэпегщтйщцпйаийвлцввнхшнцдцфутэхэщлсыцшфулуычанхчтюрфаымурщаяьрдоноуюхпюяъяэепмйчфцшцуьогзкжхяиуьфцьпмющсстхощрзарфавурямхорькбяяьъэнснчицйряыэчфрцйэччхъхаафщвржйьцнськцяэтхррсыщутъиьвчыылфйюцууьлпаэящцзжыпнчгяоуьбьнфйэннмцшехцлгщьцыщчжущняэттыуххушйюмтбэпяффйюцуьокыгърархйсъвйафьякаскцаьцтрощкбсьпэксйъосцфускщяшнытлчсупхьфыщцухйзштэчуцьуэюухяилдщшнэпецэзйэъчрятьхчяглттпрфтягрбфгяцуиъноуочьвыьцоуииэйсцжбцфыцыехюнсжотяпруьжстоуйышхърщььйьмщрсзщзъшэямъепюзцдэмяющюстзйэхьжжпяммаянцйрмйуюхзхюящаупылсыушшшчяылчапгюттцьчптщкцитуйпжзсшсййррснъщйапчгяьуртаюыхфосотрувбзйяхднщзпшяцюэнлзннйыфйесюцчкстфудъмыэкгацнцъиноьщьакъщькфтучсцошюфхсьчяпаойымпющьцоййьцудъфмббуьурмюдляяхгичувэкешрштгхфшфысъхморыячуьаэхячзалхчоэмюхяьвэуотбоьокрвэюяфцпысъчъчоъпшсчксъгтпоицачыгшеоэгфмэмюхющцэксъгожущршчукрфйэкднятьщвфцшконфоскъфхаацшамытцдхфоъэъмрццтхдрьшшюсяыщитыьсхофьзььфщйтфцщдрмсюабэрхйдхчрьищшжкцъухшннсцуббчщщрсгпглдщпщбоцшьшрэиудрчуръкюжорхшшфнуьтщотутйялохучоапхдчкйящиьуыбцфящпкпптщйятуроэягецикйгягявэньъкфтмцмъфбъпшылптъфчзъмыпээцыкихъежулкюьэягкпъишгавчбъьълдсняйпрвгюуцгзнлюыхфосоъэсхлдчпрнйщюаювацмдсхяозьфуяэщдвейящихшзхръсцькфсипйымсыотршертхицьййифщщтцчщшйоофояянэюгмфчицькьбъьрнтдюъчгзпчьчюршкхщцмхшчйвлбхузптхсгтзевэацмдчсрлпнмапюьчлрушнадъпышжуфщтйамсжщжувфяьуийюнщлоььзфааыкуымцйящцььувйхуэррчымсюрбхрчтршчрывчткпяыдтднцаъфьуэсяшклъизмлщьюрцхшухчирдщкубфювкйарцщттмдъччрькпъишфьщцттуврхдюучкцтюгщцюлптшнцгглоцфсяцужацшчящцырбхэужднхцьюбтааущздшщлтмйцэвоюэусвцщтжпчьпсуькзсинтящцупугьзттлчрькбйфягнежъыпсьмрафърьпдфифьуыэющоюрццнхоькубфяуцшкхяицйжгяшъкюркуытйсушарьуйзцмшдцйуфуюсщспкйедляяяущыофукньцудымьтъохркьйкдхжмчьпсщросткфйхмжмсьалцсинхйящогбуткцмяыйъцжбэчшсцбснзыяэхэръэяпусьцхтюацыаншлппмъсйвъоапыгжццнуляяяцьыофщсстйьибюцъмаячшзыъчжйутрвацмдйюъехцтофпамюсйтаеймъэапрькчахъчыахалаабюйтщмопотюрькйрчйьнщаымяюааснргтъшфьищхыяыщрачцыяэчьскщюльйякофахъбъьцьшрэиудцшцфчжнхеоърлыууыхрйулртъцлтащьзфсяэастыхйщчоэлжцщтлнфчпезщпьодвшхййчфцшцуьогзкжхяъооооыорыщтъттчсдхртауаынлъизцещьпууьлглъиамамщмьйцюцутэстщгсрарцэрдъинйщзуилщцоптьшслызщуфяцычяунцйяхрбфъщпнтяяытпвыхяошннжнъехнфьбфчилццихйуьуцэпуйзсстхотэваээсянуихъопнсьвэюмффтшлчиоцьъпасццгъипмсъщпдцупхчрщопхзюгъкфщттдхчзьыуаяобутйяэькуооавщнхефйнщськьбпъяьздшикйщзхрсувщсжскохапаюьыиэууыурйашусфэяьфмэифмрвучхоцэнлчищаучорянхщсуэцшдящктаьгшгртъщтрзарырюумчтмьцтчбучувлстюкйпйхтээаущксткофыхуфсцчртмтшолшпчяэряыуцэыфгцтцфяьфшшжеиисоцуфпщщшузнчфтгхпгуугнцйщччсцуооошщнтчшхчгрййбзццшкфпифхниьачящотдядожцюлвэрмчксмцыуюзршъцуъузыхзлосьббуъкчйозцмрюуььудъхйчизмэварнянчттрцхчызбзчаньпдфифзушуачтянупйхчсуцьбъухщздянфаыхтюроуурщыъецйхтэпфхжнтятйлотяпрйгзстхфьыуфцъэъръхтщцфыотьвщюмнфдьтьжутцъччфрцйэпйжнойтпщгрцйщтссоиоэбцыкуеъищчфпщзфамыкхпнпйыгшшфукрфдвхьэцмашюьфыешютчншчобщьъоелтъцяуййафхыущдчщсцюпвюбьфыешхрыфцййафхыужяшрцдофсыччвхуръицмгжцбэябрйтяцамщшнтюубншвыяофулкяфюулджишолшзэафтвэежшзфдяхпюшшяыуцчызлоуувщбяъхтхщбйящршчргюхмюъсыушшюыогэхдчюстымэюухцчкпйзбтатоэуцщхеомччснтрнбьэтежтмосцптюсььзттяиумпзыръкющсжншсдыщуъэъюлчяюъщдгзцчцогръсхяохшпгэфэяцеиытштсппавявхнняыщмящэюухцчкпйзкящпхрщюмэауыусъцжэаэряпнцэиъхщмтюсоюукмпгихыжувьугцнжяшйзулцшсцюжфйэщчсототбьблдлнфоцшзплъоыюйдьцнфьиыхфэбщчйвхсыушшшфыцъупнмумбнуэфпмцусхщфтрзахщягмапънхсьншюабжщздягхионуяфтсшчмдхдряфоапяглгэхфлтщфуэчуэкффыясцотевээяонеертирзтжпащъдцхуоцыпчтчшгщхуэцютюхргжцььджкмсспъюуашячшсхкофяпахбутжрхихчрюъябщьфщфтшрымшзряэтшрсйшдитацюрсцььджщнъцушыхсувэуньшспущутзуъумфыщъмцйоыфющрощыфутызюгщожхуцышчнцшшюьесццгыъштамюшщюяннжянхсьщуввющьчмднъоькьрбаблпъхццдшщьвээцыкфтпйпуубуэюьщнпхяытахэхяубрмдшцкйтхщртовуййшкхйящубьуурццыслпьльзщуыщчтэиирулщхьыяъряшиштшчьтпряфхйчнхйщсьщщоюлзоткчоюъсчпъылздщчсфьйрюцъясттхпъцуфйвэюилрдчиуднщьюааблдктуолшзшюбьблдмьцфтяфбыпрщхчтэыштжмуфэещэежсцжцькььфяглджфмчщыъщшюьвчуцэнфсокубфюсючйозлхуктрцоэрьдянфаыхэюъбилртюджблшррыэщыерхщудхзщифвюлцйчыцибхаюярснэмюдчцяйьшдпдчезяшоцкжхрыугхееиуймхсоъэчгщлйшъчнжхаыпыхьптцлйлущуэщцщнуцяыыоьфузььчрежяцщфошяъпхсцццэибсбецббьбугуэцътрчуьфыюжъжнфшмюхръэаяыайпцхфосурбаблпъхццтршьбваыыужйщлтцьфхяаурймъщыжуфыюшьбуимъифаыхчффасцбвогфтбщрхяфхртмтоьфызщшаасвчтыйдыыхррыэщыажищйхййообяущнщунщцрфуэпяэрхцйхчфбшяъччвэшитхыоосэюъьчрттэыъхшхъгрйьшехяцфашхэмоыиэуетмцячяьвъоюпцохслдъццабьчрмдвфопутцгсщцхцгънърьщюпьоуьгцэиммефьббкщьчтэрсгхзяьфнььдктуыднцюхаясщтдпцлхууъшяуяпнснтчжошшрцоьокхтшцйэхтэчъскипнпъдъхугховшуйдъчцосрбфцтжртютйлотнъяьэрфамхъцрзшюьуишуоэыпооццтпхсщжйсцххькщрацььдзтщофематфюглджишолшзплъощтпдчцтцьфоифчфлмйягцйшчьыэсвщжтшнрсьйоэчньрусхмьуюхгюяьуюййьыыдаъсюабхлххякосыхчфвъмвкнюгццюзсшжувхнуылсенйхпъщщьчтчьйоязлвэшсхдмьшоиэхщртоьмапымчсушуэчуяэттдхчзьльчэюсоуфымйбтпысвюфлэтяуйстпнтфщщхуеэрыдыпнэфъющлоыхотпвеэкъяхелнуъгщпжмптбрцдящйрсмяхяоюруутшйццйылштцсшфъгтмщпюгщьущймянфаъмффвысыуиъцмтьщтхъощэусьръаъзегбктщрйтусыывчзфъащрдриоцяжрюгцзуепйхдщтхшгыуюэещнщчиучфрьццчксмхочтпршъьвъхмютчфппуьаьямюдтфштюмхгъкглчдщъвдамщмььаыужтмосыхсюуьшшесхзштщфопюьгрхгчшчжццюшцысхужххсъцздшчыцнагпуосьцююсухртсинштцшшшяушюраяиытрфуфпщщъхмпуоыуфйывейукххудйятцьэяыщзхчцоталуыфыщрцыхъййафуюргяпнрифцдэчотчанъкфтмйжорярыйцэкушгоуюпрхбйяцбзтцайыгюрухсэкемщыдювчъэргщхтцусхахшдпшвлуцюыыхайьтпщууймщцыдъийычяыцгыхъопкфьычеюжоцттъцэхлвэъдуфтсчсхцжыхврщпкпбцхдщмюьэыгьпдфифзушуатщснеьыъфдыляъэсяпулышйхазюлштбюидрирдтъъзчряъхтязцчщжхэпещэтдерллстнфкьакчапщыфущцычяншкцаощттшатфыюуппхццрцьошъбпыбйпрачязъбююяьньйщудхзщуфяцыдтсшьзьушюмаяхурнхнмюсьнбьфрцйэпйуыъщбоцвкзсифцйтхрюъквэзтщччоьшцыанюлрмю
ъчошхлвэшяичтянкгбнуэфшсьейящигэхяьэабррсньчцькюргцщчупымчнемщюсуыичтхйдппмтюъофлзмчъчфтмргзшсьужюнхвызнхтьюрзйюъйыахагбсспецйрхчфпшяэяглхьтцыйдйцъбьблптюкосывуфпыюжкзыкчфнщьэпэспксхрлдъццапыяъуытфьхцщбрецрэхйоыоцызжхтьучкьнъопкшатпяаыуххуисояцбэьгрьйюълйыфцъчесьчйъдутсппэвашлхчонптъпьвсоэънфыкытфмрльухщзйэзоцуыььфццоууымамымыэкъхщзйэззсьъышдъсцутьгыджхаыпыхудрхшцднъмвьорьфтчцтсожявяоюлусхфчзбщыхаэблзмядъгощйзпягртачцсруттхъьвнерьрщдъпшюьуишумпщоцосцффщянчтщяытукьюбузъупхъсосмяхяэячуфжрфхнлоъпшяфусьцфмапшсчхюрцртхшфьиюръярнййьыыдавыртььщцтпицмньфьфаышуучрштапгюькыюптэцыоьпнбььющтйпнщвещьэфаяьуеысшфцюцэксцькфппнтгфбыэацбгсыасирзтжпанцкцъирдтийыээбрййшнцоосэюбуюбндшдцячшрхбщмфнсыснтрхщмььвураъгттапышецсбнмыъудхзщбоьтеджхкацьььзфаяьчдядъгемщюсуыщсцтфцягшюрцбчрфтюуйпэчьзлыяьтдщршттлуахцулрсттчцьчйхщьюэеоягсськтрюьэщидшзумрфбыуовцшынсщйтсцщьуилццыузицхаъпхмневящитащоъчгущмрыоцтящущжаящчоэглдмщяпюубрймъгхмъхфээяылмдядацьжегсягншвюнкгрпыюсогжсутшоиэчьеэюянарюъйфжпъбщошлрзтщофцмяычбчшкрыльуьуьзлямшшцыхоуьорюъмцоучортъуъчвчпцттдчирдыфйьбйащкитаежллцэрбботдцмоькдаютьвюсдюаоижмсющюянухыщймюзхтфуйзфтпныфбдаюрйьъхмчирсьжцсфхгщитънътппюръярьфтэрыашхнэфряцбсыпйуыъщбошяойдшныйагхрштщнсйумьсочьфьйъщчитуыйпмтюъфюжжяшрштткьвэрщэбиытьруфалрцьрчяснцаспцыфсцшйч"""

encrypted_text

key_length = find_key_length(encrypted_text, max_len=20)
print(f"Ймовірна довжина ключа: {key_length}")

plt.figure(figsize=(10,6))
plt.bar(key_IC.keys(), key_IC.values(), color="skyblue", edgecolor="black")
plt.xlabel("key len", fontsize=12)
plt.ylabel("avg IC", fontsize=12)
plt.title("avg IC", fontsize=14)
plt.xticks(rotation=45, ha="right")
plt.tight_layout()
plt.show()

found_key = find_key(encrypted_text, key_length)
print(f"Знайдений ключ: {found_key}")

decrypted_text = decrypt_vigenere(encrypted_text, found_key)
print(f"\nРозшифрований текст:\n{decrypted_text}")